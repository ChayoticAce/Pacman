package pacmandemo;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.JFrame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class PacmanDemo extends JFrame implements KeyListener
{

    int x = 0;
    int y = 0;
    int startingAngle = 30;
    int endingAngle = 300;
    int count = 0;
    
    ////////////////CONSTRUCTOR////////////////
    PacmanDemo()
    {
        super.setSize(new Dimension(500,500));
        super.addKeyListener(this);
        super.setTitle("PACMAN DEMO");
        super.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    
    ////////////////PAINTING THE OBJECTS////////////////
    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        g.setColor(Color.yellow);
        g.fillArc(100 + x,100 + y,100,100,startingAngle,endingAngle);
    }
    ////////////////KEY EVENTS////////////////
    @Override
    public void keyTyped(KeyEvent e) 
    {
     int key = e.getKeyCode();
     switch (key)
     {
         case KeyEvent.VK_RIGHT:
             x += 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
                 
             case KeyEvent.VK_LEFT:
             x -= 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
                 
            case KeyEvent.VK_UP:
             y += 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
            case KeyEvent.VK_DOWN:
             y -= 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;   
                 break;
     }
     repaint();
    }

    @Override
    public void keyPressed(KeyEvent e) 
    {
        int key = e.getKeyCode();
     switch (key)
     {
         case KeyEvent.VK_RIGHT:
             x += 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
                 
             case KeyEvent.VK_LEFT:
             x -= 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
                 
            case KeyEvent.VK_UP:
             y += 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
                 
            case KeyEvent.VK_DOWN:
             y -= 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;  
                 break;
     }
     repaint();
    }

    @Override
    public void keyReleased(KeyEvent e)
    {
        int key = e.getKeyCode();
     switch (key)
     {
         case KeyEvent.VK_RIGHT:
             x += 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
                 
             case KeyEvent.VK_LEFT:
             x -= 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
                 
            case KeyEvent.VK_UP:
             y += 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;
                 break;
                 
            case KeyEvent.VK_DOWN:
             y -= 5;
             ++count;
             if(count % 2 == 0) closeMouth();
             else
                 startingAngle = 30; endingAngle = 300;    
                 break;
     }
     repaint();
    }
    ////////////////MAIN METHOD////////////////
    public static void main(String[] args) 
    {
        PacmanDemo pacman = new PacmanDemo();
        pacman.setVisible(true);
    }

    public void closeMouth() 
    {
        startingAngle = 0;
        endingAngle = 0;
    }
    
}
